datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String      @unique
  username        String      @unique
  fullname        String
  password        String
  avatar_url      String?
  banner_url      String?
  bio             String?
  headline        String?
  provider        String      @default("EMAIL")
  created_at      DateTime    @default(now()) @db.Timestamptz
  updated_at      DateTime    @updatedAt @db.Timestamptz
  deleted_at      DateTime?   @db.Timestamptz 

  posts           Post[]      @relation("UserCreatedPosts")
  posts_edited    Post[]      @relation("UserUpdatedPosts") 
  posts_deleted   Post[]      @relation("UserDeletedPosts") 

  @@map("users")
}

model Post {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String
  image_url       String
  episode_no      Float
  episode_title   String
  clip_time       String
  summary         String 
  created_by      String      @db.Uuid
  updated_by      String?     @db.Uuid 
  deleted_by      String?     @db.Uuid
  created_at      DateTime    @default(now()) @db.Timestamptz
  updated_at      DateTime    @updatedAt @db.Timestamptz
  deleted_at      DateTime?   @db.Timestamptz 
  
  author          User        @relation("UserCreatedPosts", fields: [created_by], references: [id])
  editor          User?       @relation("UserUpdatedPosts", fields: [updated_by], references: [id])
  deleter         User?       @relation("UserDeletedPosts", fields: [deleted_by], references: [id])
  
  @@index([created_by])
  @@index([updated_by])
  @@index([deleted_by])
  @@map("posts")
}

