/auth/login:
  post:
    tags:
      - Auth
    summary: Login user dengan email/username dan password.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginRequest"
    responses:
      "200":
        description: Login sukses, cookie 'token' diset.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetailResponse"
      "401":
        description: Invalid credentials (email/username atau password).
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"

/auth/register:
  post:
    tags:
      - Auth
    summary: Registrasi user baru.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterRequest"
    responses:
      "201":
        description: Registrasi sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetailResponse"
      "409":
        description: Username atau Email sudah terdaftar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"

/auth/logout:
  post:
    tags:
      - Auth
    summary: Logout user (menghapus cookie 'token').
    security:
      - cookieAuth: []
    responses:
      "200":
        description: Logout sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"

/auth/reset/{id}:
  put:
    tags:
      - Auth
    summary: Reset password dengan ID user (memerlukan password lama).
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik user.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResetPasswordRequest"
    responses:
      "200":
        description: Reset password sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"
      "401":
        description: Invalid password lama.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"

/auth/verify:
  get:
    tags:
      - Auth
    summary: Verifikasi token dan cek status login user.
    security:
      - cookieAuth: []
    responses:
      "200":
        description: Verifikasi sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetailResponse"
      "401":
        description: Token tidak valid atau tidak ada.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"

/auth/google:
  get:
    tags:
      - Auth
    summary: Redirect ke halaman otorisasi Google.
    responses:
      "302":
        description: Redirect ke Google.

/auth/google/callback:
  get:
    tags:
      - Auth
    summary: Callback dari Google OAuth.
    parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
        description: Kode otorisasi dari Google.
    responses:
      "302":
        description: Login/Register sukses, redirect ke client dengan cookie 'token' diset.
      "401":
        description: Invalid credentials dari Google.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"

# --- USER ENDPOINTS ---
/user:
  get:
    tags:
      - Users
    summary: Mengambil daftar user dengan opsi paginasi dan pencarian.
    security:
      - cookieAuth: []
    parameters:
      - $ref: "#/components/parameters/pageParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/searchParam"
    responses:
      "200":
        description: Fetch daftar user sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaginatedUserResponse"

/user/{id}:
  get:
    tags:
      - Users
    summary: Mengambil detail user berdasarkan ID.
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik user.
    responses:
      "200":
        description: Fetch user sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetailResponse"
      "404":
        description: User tidak ditemukan.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
  patch:
    tags:
      - Users
    summary: Mengupdate data user (hanya user yang bersangkutan).
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik user.
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              fullname:
                $ref: "#/components/schemas/UserUpdateRequest/properties/fullname"
              username:
                $ref: "#/components/schemas/UserUpdateRequest/properties/username"
              email:
                $ref: "#/components/schemas/UserUpdateRequest/properties/email"
              bio:
                $ref: "#/components/schemas/UserUpdateRequest/properties/bio"
              headline:
                $ref: "#/components/schemas/UserUpdateRequest/properties/headline"
              remove_avatar:
                $ref: "#/components/schemas/UserUpdateRequest/properties/remove_avatar"
              remove_banner:
                $ref: "#/components/schemas/UserUpdateRequest/properties/remove_banner"
              avatar_url:
                type: string
                format: binary
                description: File gambar untuk avatar.
              banner_url:
                type: string
                format: binary
                description: File gambar untuk banner.
    responses:
      "200":
        description: Update user sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetailResponse"
      "403":
        description: Unauthorized (bukan user yang bersangkutan).
      "404":
        description: User tidak ditemukan.

  delete:
    tags:
      - Users
    summary: Soft delete user (hanya user yang bersangkutan).
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik user.
    responses:
      "200":
        description: User soft deleted sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"

  put:
    tags:
      - Users
    summary: Restore user yang telah di-soft delete (hanya user yang bersangkutan).
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik user yang sudah di-soft delete.
    responses:
      "200":
        description: User restored sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"

# --- POST ENDPOINTS ---
/post:
  get:
    tags:
      - Posts
    summary: Mengambil daftar post dengan opsi paginasi dan pencarian.
    security:
      - cookieAuth: []
    parameters:
      - $ref: "#/components/parameters/pageParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/searchParam"
    responses:
      "200":
        description: Fetch daftar post sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaginatedPostResponse"
  post:
    tags:
      - Posts
    summary: Membuat post baru dengan menganalisis gambar.
    security:
      - cookieAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              image_url:
                type: string
                format: binary
                description: File gambar cuplikan anime yang akan dianalisis.
    responses:
      "201":
        description: Post berhasil dibuat.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDetailResponse"
      "400":
        description: Bad request (misal, tidak ada file).
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"

/post/{id}:
  get:
    tags:
      - Posts
    summary: Mengambil detail post berdasarkan ID.
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik post.
    responses:
      "200":
        description: Fetch post sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDetailResponse"
      "404":
        description: Post tidak ditemukan.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
  delete:
    tags:
      - Posts
    summary: Soft delete post (hanya user pembuat).
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik post.
    responses:
      "200":
        description: Post soft deleted sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuccessResponse"
      "403":
        description: Unauthorized (bukan user pembuat).
      "404":
        description: Post tidak ditemukan.
  put:
    tags:
      - Posts
    summary: Restore post yang telah di-soft delete (hanya user pembuat).
    security:
      - cookieAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID unik post yang sudah di-soft delete.
    responses:
      "200":
        description: Post restored sukses.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDetailResponse"
      "403":
        description: Unauthorized (bukan user pembuat).
      "404":
        description: Post tidak ditemukan.